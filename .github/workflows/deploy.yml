deploy:
  name: Deploy to Linux VM
  runs-on: ubuntu-latest
  needs: build-and-push
  steps:
    # Install OpenVPN
    - name: Install OpenVPN
      run: sudo apt-get install -y openvpn

    # Prepare VPN files
    - name: Prepare VPN Files
      run: |
        echo "${{ secrets.VPN_PKCS12_FILE }}" | base64 -d > TRPL-FW-TCP-1194-ci-cd-automation.p12
        echo "${{ secrets.VPN_TLS_KEY_FILE }}" | base64 -d > TRPL-FW-TCP-1194-ci-cd-automation-tls.key

    # Connect to VPN
    - name: Connect to VPN
      run: |
        echo "${{ secrets.VPN_CONFIG_FILE }}" > vpn-config.ovpn
        echo -e "${{ vars.VPN_USERNAME }}\n${{ secrets.VPN_PASSWORD }}" > vpn-credentials.txt
        sudo openvpn --config vpn-config.ovpn --auth-user-pass vpn-credentials.txt --daemon

    # Wait for VPN connection
    - name: Wait for VPN Connection
      run: sleep 15

    # Verify VPN connection
    - name: Verify VPN Connection
      run: |
        ifconfig | grep tun || (echo "VPN connection failed" && exit 1)

    # Add user to Docker group to allow Docker commands without sudo
    - name: Add user to Docker group
      run: |
        sudo usermod -aG docker $USER
        newgrp docker || true

    # Create Docker network if it doesn't exist
    - name: Create Docker Network if not exists
      run: |
        echo "${{ secrets.LINUX_VM_PASSWORD_DEVELOPMENT }}" | sudo -S docker network create odoo-postgres-network || echo "Network already exists"

    # Deploy Odoo Docker container to VM
    - name: Deploy Odoo Docker Container to VM
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ vars.LINUX_VM_HOST_DEVELOPMENT }}
        username: ${{ vars.LINUX_VM_USERNAME_DEVELOPMENT }}
        password: ${{ secrets.LINUX_VM_PASSWORD_DEVELOPMENT }}
        port: 22
        script: |
          echo "${{ secrets.LINUX_VM_PASSWORD_DEVELOPMENT }}" | sudo -S docker login ${{ vars.ACR_NAME }}.azurecr.io -u ${{ vars.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
          echo "${{ secrets.LINUX_VM_PASSWORD_DEVELOPMENT }}" | sudo -S docker pull ${{ vars.ACR_NAME }}.azurecr.io/${{ inputs.environment }}/trpl-odoo-docker:v1
          echo "${{ secrets.LINUX_VM_PASSWORD_DEVELOPMENT }}" | sudo -S docker stop odoo-container || true
          echo "${{ secrets.LINUX_VM_PASSWORD_DEVELOPMENT }}" | sudo -S docker rm odoo-container || true
          echo "${{ secrets.LINUX_VM_PASSWORD_DEVELOPMENT }}" | sudo -S docker run -d --restart always --name odoo-container --network=odoo-postgres-network -p 8069:8069 ${{ vars.ACR_NAME }}.azurecr.io/${{ inputs.environment }}/trpl-odoo-docker:v1

    # Cleanup VPN credentials
    - name: Cleanup VPN Credentials
      run: |
        rm -f vpn-config.ovpn vpn-credentials.txt
